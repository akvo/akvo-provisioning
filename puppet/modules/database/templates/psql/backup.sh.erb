#!/bin/bash
#
# Postgresql Backup Script
#  Dumps psql databases to a file for another backup tool to pick up.
#
##### START CONFIG ###################################################

USER='backup'
DBNAME='<%= @dbname %>'
PASS='<%= @backuppassword %>'
ENC_PASS_FILE=<%= @db_crypto_file %>
PERIODICITY=$1
DIR=/backups/data/psql/$PERIODICITY/
case $PERIODICITY in
    daily)
      RETENTION=7
      ;;
    weekly)
      RETENTION=28
      ;;
    monthly)
      RETENTION=365
      ;;
esac

##### STOP CONFIG ####################################################
PATH=/usr/bin:/usr/sbin:/bin:/sbin

TIMESTAMP=`date +%Y%m%d-%H%M%S`
FILENAME="${DIR}/${DBNAME}-backup-${TIMESTAMP}.sql.gz"

set -o pipefail

mkdir -p $DIR
find "${DIR}/" -type f -name "${DBNAME}-backup-*.sql.gz*" -mtime +$RETENTION -delete

# apply to release backups the same retention policy as the monthly ones
if [ $1 = "monthly" ]; then
    find /backups/data/psql/release/ -type -f -name "${DBNAME}-backup-*.sql.gz*" -mtime +$RETENTION -delete
fi

PGPASSWORD=${PASS} pg_dump --host=psql --username=${USER} ${DBNAME} | gzip > $FILENAME

# encrypt
openssl aes-256-cbc -salt -a -e -in $FILENAME -out $FILENAME.enc -pass file:$ENC_PASS_FILE
if [ $? -eq 0 ]; then
  rm $FILENAME
fi
